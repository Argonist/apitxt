group	dictionary	Resources related to dictionary collections
	line	+ Source: [ApiTxt format](../src/dictionary.txt) and [JSON objects](../src/dictionary.json)
	line	+ Documents: [API Blueprint](../doc/dictionary.md) and [Stand Alone HTML](../doc/dictionary.htm)
	line	+ Live Page: [API Dictionary](../api/dictionary.html) and [JavaScript](../api/dictionary.js)
	route	/dictionary{?name}	Dictionaries available
		parameter	name	public	string	partial dictionary name
		method	GET	Get available dictionaries
			code	$dir = 'data/db/';
			code	$ext = '.db';
			code	$out = [];
			code	if ($name){
			code	  if (strpos($name,"dictionary")!==false){
			code	    $dictionaries = $dir . '*' . $name . '*' . $ext;
			code	    $files = glob($dictionaries);
			code	  } else {
			code	    $dictionaries = $dir . '*dictionary*' . $name . '*' . $ext;
			code	    $files = glob($dictionaries);
			code	    if (count($files)==0) {
			code	      $dictionaries = $dir . '*' . $name . '*dictionary*' . $ext;
			code	      $files = glob($dictionaries);
			code	    }
			code	  }
			code	} else {
			code	  $dictionaries = $dir . '*dictionary*' . $ext;
			code	  $files = glob($dictionaries);
			code	}
			code	foreach ($files as $filename) {
			code	  $out[] = str_replace($ext,'',str_replace($dir,'',$filename));
			code	}
			code	if (count($out)){
			code	  echo json_pretty($out);
			code	} else {
			code	  $app->response->setStatus(204);
			code	}
			code	return;
			response	200	text/plain
				body	["ase-US-dictionary-public"]
	route	/dictionary/{name}{?update}	Dictionary resource	Access to available dictionaries
		parameter	name	`ase-US-dictionary-public`	required,string	The name of an dictionary
		parameter	update	1	optional,number	Forces a rewrite of the dictionary for json and txt formats
		method	GET	retrieve dictionary
			code	$headers = getHeaders();
			code	$pass = isset($headers['Pass'])?$headers['Pass']:'';
			code	rightsCheck($name,$pass,SP_VIEW);
			code	$check = isset($headers['If-Modified-Since'])?$headers['If-Modified-Since']:'';
			code	if (strpos($name,'.')){
			code	  $parts = explode('.',$name);
			code	  $name = $parts[0];
			code	  $format = $parts[1];
			code	  if (!in_array($format,['db','txt','json'])){
			code	    haltNotFound();
			code	  }
			code	} else {
			code	  $format = 'json';
			code	}
			code	$dir = 'data/' . $format . '/';
			code	$ext = '.' . $format;
			code	$file = $dir . $name . $ext;
			code	$err = invalidName($name);
			code	if ($err){
			code	  haltBadRequest($err);
			code	}
			code	$lastModified = lastModified($name);
			code	if ($lastModified <= $check  && !$update){
			code	  haltNotModified();
			code	}
			code	if ($format=='json' && (!file_exists($file) || $update)) {
			code	  $json = dictionary2json($name);
			code	  file_put_contents($file,$json);
			code	} else if ($format=='txt' && (!file_exists($file) || $update)) {
			code	  $txt = dictionary2txt($name);
			code	  file_put_contents($file,$txt);
			code	}
			code	if(file_exists($file)) {
			code	  header('Last-Modified: ' . $lastModified);
			code	  $searchTime = searchtime($timein);
			code	  header("Search-Time: " . $searchTime);
			code	  getFile($file);
			code	} else {
			code	  haltNotFound();
			code	}
			request	dictionary text
				header	If-Modified-Since	2019-01-16T16:56:19.175Z
				response	200	text/plain
					body	1<TAB>𝠀񂱡񂇙񆿃𝠃𝤝𝤔񂇙𝣰𝣹񆿃𝤎𝤁񂱡𝣽𝤀<TAB>test zero<TAB>test zero<TAB>we are testing SignPuddle 1.6<TAB>Val ;-)<TAB>{"video":"<iframe width=\"425\" height=\"349\" src=\"http:\/\/www.youtube.com\/embed\/RTniYA1lTDM\" frameborder=\"0\" allowfullscreen><\/iframe>"}<TAB>Val<TAB>2011-07-20T17:39:02Z<TAB>2011-07-20T17:42:09Z
	route	/dictionary/{name}/signs	List of dictionary signs	The signs in the dictionary
		parameter	name	`ase-US-dictionary-public`	string	The name of an dictionary
		method	GET	retrieve dictionary signs
			code	$headers = getHeaders();
			code	$pass = isset($headers['Pass'])?$headers['Pass']:'';
			code	rightsCheck($name,$pass,SP_VIEW);
			code	$check = isset($headers['If-Modified-Since'])?$headers['If-Modified-Since']:'';
			code	$err = invalidName($name);
			code	if ($err){
			code	  haltBadRequest($err);
			code	}
			code	$lastModified = lastModified($name);
			code	if ($lastModified <= $check){
			code	  haltNotModified();
			code	}
			code	header('Last-Modified: ' . $lastModified);
			code	$output = dictionarySigns($name);
			code	$searchTime = searchtime($timein);
			code	header("Search-Time: " . $searchTime);
			code	echo $output;
			request	dictionary text
				header	If-Modified-Since	2019-01-16T16:56:19.175Z
				response	200	text/plain
					body	𝠀񂱡񂇙񆿃𝠃𝤝𝤔񂇙𝣰𝣹񆿃𝤎𝤁񂱡𝣽𝤀
	route	/dictionary/{name}/signtexts	List of dictionary signtexts	The signtexts in the dictionary
		parameter	name	`ase-US-dictionary-public`	string	The name of an dictionary
		method	GET	retrieve dictionary signtexts
			code	$headers = getHeaders();
			code	$pass = isset($headers['Pass'])?$headers['Pass']:'';
			code	rightsCheck($name,$pass,SP_VIEW);
			code	$check = isset($headers['If-Modified-Since'])?$headers['If-Modified-Since']:'';
			code	$err = invalidName($name);
			code	if ($err){
			code	  haltBadRequest($err);
			code	}
			code	$lastModified = lastModified($name);
			code	if ($lastModified <= $check){
			code	  haltNotModified();
			code	}
			code	header('Last-Modified: ' . $lastModified);
			code	$output = dictionarySigntexts($name);
			code	$searchTime = searchtime($timein);
			code	header("Search-Time: " . $searchTime);
			code	echo $output;
			request	dictionary text
				header	If-Modified-Since	2019-01-16T16:56:19.175Z
				response	200	text/plain
					body	𝠀񂱡񂇙񆿃𝠃𝤝𝤔񂇙𝣰𝣹񆿃𝤎𝤁񂱡𝣽𝤀
	route	/dictionary/{name}/entry	Dictionary entry resource	Entries for dictionary
		parameter	name	`ase-US-dictionary-public`	string	The name of an dictionary
		method	POST	add dictionary entry
			code	$headers = getHeaders();
			code	$pass = isset($headers['Pass'])?$headers['Pass']:'';
			code	$err = invalidName($name);
			code	if ($err){
			code	  haltBadRequest($err);
			code	}
			code	$data = $app->request->getbody();
			code	$data = json_decode($data,true);
			code	echo dictionaryEntryNew($name,$data,$pass);
			code	return;
			request	add new dictionary entry	application/json
				header	Pass	724fd4b4438fba9d0c5ab89d0833e5c9
				body	{
				body	  "sign": "\ud836\udc03\ud836\udd44\ud836\udd19\ud8ef\udfa1\ud836\udcf4\ud836\udcf4\ud8dd\udc54\ud836\udcc8\ud836\udcfc\ud8dd\udc42\ud836\udd26\ud836\udcfa\ud8c8\uddd2\ud836\udd15\ud836\udcee\ud8c8\uddda\ud836\udce0\ud836\udcef",
				body	  "terms": [
				body	    "Malaysia"
				body	  ],
				body	  "signtext": "",
				body	  "text": "",
				body	  "source": "Conference Maastricht",
				body	  "detail": {}
				body	}  
				response	200	text/plain
					body	777
	route	/dictionary/{name}/entry/{id}	Dictionary entry resource for id	Specific entries for dictionary
		parameter	name	`ase-US-dictionary-public`	string	The name of an dictionary
		parameter	id	11244	string	An id numbers
		method	PUT	update dictionary entry
			code	$err = invalidName($name);
			code	if ($err){
			code	  haltBadRequest($err);
			code	}
			code	$headers = getHeaders();
			code	$pass = isset($headers['Pass'])?$headers['Pass']:'';
			code	$data = $app->request->getbody();
			code	$data = json_decode($data,true);
			code	dictionaryEntryUpdate($name,$id,$data,$pass);
			code	$app->response->setStatus(204);
			code	return;
			request	an update for an existing dictionary entry	application/json
				header	Pass	724fd4b4438fba9d0c5ab89d0833e5c9
				body	{
				body	  "sign": "\ud836\udc03\ud836\udd44\ud836\udd19\ud8ef\udfa1\ud836\udcf4\ud836\udcf4\ud8dd\udc54\ud836\udcc8\ud836\udcfc\ud8dd\udc42\ud836\udd26\ud836\udcfa\ud8c8\uddd2\ud836\udd15\ud836\udcee\ud8c8\uddda\ud836\udce0\ud836\udcef",
				body	  "terms": [
				body	    "Malaysia"
				body	  ],
				body	  "signtext": "",
				body	  "text": "",
				body	  "source": "Conference Maastricht",
				body	  "detail": {}
				body	}  
				response	204
		method	DELETE	remove dictionary entry
			code	$err = invalidName($name);
			code	if ($err){
			code	  haltBadRequest($err);
			code	}
			code	$headers = getHeaders();
			code	$pass = isset($headers['Pass'])?$headers['Pass']:'';
			code	dictionaryEntryDelete($name,$id,$pass);
			code	$app->response->setStatus(204);
			request	the removal of an dictionary entry
				header	Pass	724fd4b4438fba9d0c5ab89d0833e5c9
				response	204
	route	/dictionary/{name}/search{?offset,limit,filter,sort,results}	Search dictionary	Searching dictionary signs
		parameter	name	`ase-US-dictionary-public`	required,string	The name of a dictionary
		parameter	offset	0	number	Start of search results
		parameter	limit	10	number	Number of search results
		parameter	filter	user=Val	string	restrict search results
		parameter	sort	created_at	string	Field for sorting results
		parameter	results	sign	string	Type of results: entries, sign, term, terms
		method	GET	retrieve dictionary results of searching
			code	$headers = getHeaders();
			code	$pass = isset($headers['Pass'])?$headers['Pass']:'';
			code	rightsCheck($name,$pass,SP_VIEW);
			code	$check = isset($headers['If-Modified-Since'])?$headers['If-Modified-Since']:'';
			code	$err = invalidName($name);
			code	if ($err){
			code	  haltBadRequest($err);
			code	}
			code	$lastModified = lastModified($name);
			code	if ($lastModified <= $check){
			code	  haltNotModified();
			code	}
			code	$output = json_pretty(dictionarySearch($name,$offset,$limit,$filter,$sort,$results));
			code	header('Last-Modified: ' . $lastModified);
			code	$searchTime = searchtime($timein);
			code	header("Search-Time: " . $searchTime);
			code	echo $output;
			request	dictionary query results
				header	If-Modified-Since	2019-01-16T16:56:19.175Z
				header	Pass	724fd4b4438fba9d0c5ab89d0833e5c9
				response	200	text/plain
					body	{
					body	  "total": 1,
					body	  "data": [
					body	    [
					body	      "1",
					body	      "\ud836\udc00\ud8cb\udc61\ud8c8\uddd9\ud8db\udfc3\ud836\udc03\ud836\udd1d\ud836\udd14\ud8c8\uddd9\ud836\udcf0\ud836\udcf9\ud8db\udfc3\ud836\udd0e\ud836\udd01\ud8cb\udc61\ud836\udcfd\ud836\udd00"
					body	    ]
					body	  ]
					body	}
	route	/dictionary/{name}/search/id/{id}	Search dictionary with ids	Specific entries for dictionary
		parameter	name	`ase-US-dictionary-public`	string	The name of an dictionary
		parameter	id	1-4,5	string	A list of one or more id numbers
		method	GET	retrieve dictionary entry
			code	$headers = getHeaders();
			code	$pass = isset($headers['Pass'])?$headers['Pass']:'';
			code	rightsCheck($name,$pass,SP_VIEW);
			code	$check = isset($headers['If-Modified-Since'])?$headers['If-Modified-Since']:'';
			code	$err = invalidName($name);
			code	if ($err){
			code	  haltBadRequest($err);
			code	}
			code	$entries = dictionarySearchId($name,$id,$pass);
			code	if (!$entries){
			code	  haltNoContent();
			code	}
			code	$lastModified = max(array_map(function($o) {return $o['updated_at'];},$entries));
			code	if ($lastModified <= $check){
			code	  haltNotModified();
			code	}
			code	header('Last-Modified: ' . $lastModified);
			code	echo json_pretty($entries);
			request	an dictionary entry
				header	If-Modified-Since	2019-01-16T16:56:19.175Z
				header	Pass	724fd4b4438fba9d0c5ab89d0833e5c9
				response	200	text/plain
					body	[
					body	  {
					body	    "id": "1",
					body	    "sign": "\ud836\udc00\ud8cb\udc61\ud8c8\uddd9\ud8db\udfc3\ud836\udc03\ud836\udd1d\ud836\udd14\ud8c8\uddd9\ud836\udcf0\ud836\udcf9\ud8db\udfc3\ud836\udd0e\ud836\udd01\ud8cb\udc61\ud836\udcfd\ud836\udd00",
					body	    "terms": [
					body	      "test zero"
					body	    ],
					body	    "lower": [
					body	      "test zero"
					body	    ],
					body	    "signtext": "",
					body	    "text": "we are testing SignPuddle 1.6",
					body	    "source": "Val ;-)",
					body	    "detail": {
					body	      "video": "<iframe width=\"425\" height=\"349\" src=\"http:\/\/www.youtube.com\/embed\/RTniYA1lTDM\" frameborder=\"0\" allowfullscreen><\/iframe>"
					body	    },
					body	    "user": "Val",
					body	    "created_at": "2011-07-20T17:39:02Z",
					body	    "updated_at": "2011-07-20T17:42:09Z"
					body	  }
					body	]
	route	/dictionary/{name}/search/sign/{query}{?offset,limit,filter,sort,results}	Search signs with query string	Query string access to dictionary signs
		parameter	name	`ase-US-dictionary-public`	required,string	The name of a dictionary
		parameter	query	Q	required,string	A query string
		parameter	offset	0	number	Start of search results
		parameter	limit	10	number	Number of search results
		parameter	filter	user=Val	string	restrict search results
		parameter	sort	created_at	string	Field for sorting results
		parameter	results	sign	string	Type of results: entries, sign, term, terms
		method	GET	retrieve dictionary results of searching signs with query string
			code	$headers = getHeaders();
			code	$pass = isset($headers['Pass'])?$headers['Pass']:'';
			code	rightsCheck($name,$pass,SP_VIEW);
			code	$check = isset($headers['If-Modified-Since'])?$headers['If-Modified-Since']:'';
			code	$err = invalidName($name);
			code	if ($err){
			code	  haltBadRequest($err);
			code	}
			code	$lastModified = lastModified($name);
			code	if ($lastModified <= $check){
			code	  haltNotModified();
			code	}
			code	header('Last-Modified: ' . $lastModified);
			code	$output = json_pretty(dictionarySearchSign($name,$query,$offset,$limit,$filter,$sort,$results));
			code	$searchTime = searchtime($timein);
			code	header("Search-Time: " . $searchTime);
			code	echo $output;
			request	dictionary query results
				header	If-Modified-Since	2019-01-16T16:56:19.175Z
				header	Pass	724fd4b4438fba9d0c5ab89d0833e5c9
				response	200	text/plain
					body	{
					body	  "total": 1,
					body	  "data": [
					body	    [
					body	      "1",
					body	      "\ud836\udc00\ud8cb\udc61\ud8c8\uddd9\ud8db\udfc3\ud836\udc03\ud836\udd1d\ud836\udd14\ud8c8\uddd9\ud836\udcf0\ud836\udcf9\ud8db\udfc3\ud836\udd0e\ud836\udd01\ud8cb\udc61\ud836\udcfd\ud836\udd00"
					body	    ]
					body	  ]
					body	}
	route	/dictionary/{name}/search/signtext/{query}{?offset,limit,filter,sort,results}	Search signtexts with query string	Query string access to dictionary signtexts
		parameter	name	`ase-US-dictionary-public`	required,string	The name of a dictionary
		parameter	query	Q	required,string	A query string
		parameter	offset	0	number	Start of search results
		parameter	limit	10	number	Number of search results
		parameter	filter	user=Val	string	restrict search results
		parameter	sort	created_at	string	Field for sorting results
		parameter	results	sign	string	Type of results: entries, signtext, term, terms
		method	GET	retrieve dictionary results of searching signtexts with query string
			code	$headers = getHeaders();
			code	$pass = isset($headers['Pass'])?$headers['Pass']:'';
			code	rightsCheck($name,$pass,SP_VIEW);
			code	$check = isset($headers['If-Modified-Since'])?$headers['If-Modified-Since']:'';
			code	$err = invalidName($name);
			code	if ($err){
			code	  haltBadRequest($err);
			code	}
			code	$lastModified = lastModified($name);
			code	if ($lastModified <= $check){
			code	  haltNotModified();
			code	}
			code	header('Last-Modified: ' . $lastModified);
			code	$output = json_pretty(dictionarySearchSigntext($name,$query,$offset,$limit,$filter,$sort,$results));
			code	$searchTime = searchtime($timein);
			code	header("Search-Time: " . $searchTime);
			code	echo $output;
			request	dictionary query results
				header	If-Modified-Since	2019-01-16T16:56:19.175Z
				header	Pass	724fd4b4438fba9d0c5ab89d0833e5c9
				response	200	text/plain
					body	{
					body	  "total": 1,
					body	  "data": [
					body	    [
					body	      "1",
					body	      "\ud836\udc00\ud8cb\udc61\ud8c8\uddd9\ud8db\udfc3\ud836\udc03\ud836\udd1d\ud836\udd14\ud8c8\uddd9\ud836\udcf0\ud836\udcf9\ud8db\udfc3\ud836\udd0e\ud836\udd01\ud8cb\udc61\ud836\udcfd\ud836\udd00"
					body	    ]
					body	  ]
					body	}
	route	/dictionary/{name}/search/terms/{text}{?type,case,offset,limit,filter,sort,results}	Dictionary terms search	Search dictionary terms for text
		parameter	name	`ase-US-dictionary-public`	required,string	The name of an dictionary
		parameter	text	`SignPuddle`	required,string	The text for searching
		parameter	type	exact	string	Type of search of start, end, or exact
		parameter	case	0	number	Case sensitive search
		parameter	offset	0	number	Start of search results
		parameter	limit	10	number	Number of search results
		parameter	filter	user=Val	string	restrict search results
		parameter	sort	created_at	string	Field for sorting results
		parameter	results	sign	string	Type of results: entries, sign, term, terms
		method	GET	retrieve matching entries
			code	$headers = getHeaders();
			code	$pass = isset($headers['Pass'])?$headers['Pass']:'';
			code	rightsCheck($name,$pass,SP_VIEW);
			code	$err = invalidName($name);
			code	if ($err){
			code	  haltBadRequest($err);
			code	}
			code	$output = json_pretty(dictionarySearchTerms($name,$text,$type,$case, $offset, $limit, $filter, $sort,$results));
			code	$searchTime = searchtime($timein);
			code	header("Search-Time: " . $searchTime);
			code	echo $output;
			request	matching dictionary entries
				header	Pass	724fd4b4438fba9d0c5ab89d0833e5c9
				response	200	text/plain
					body	{
					body	  "total": 1,
					body	  "data": [
					body	    [
					body	      "1",
					body	      "\ud836\udc00\ud8cb\udc61\ud8c8\uddd9\ud8db\udfc3\ud836\udc03\ud836\udd1d\ud836\udd14\ud8c8\uddd9\ud836\udcf0\ud836\udcf9\ud8db\udfc3\ud836\udd0e\ud836\udd01\ud8cb\udc61\ud836\udcfd\ud836\udd00"
					body	    ]
					body	  ]
					body	}
	route	/dictionary/{name}/alphabet{?update}	Dictionary symbol subset	Create alphabet from dictionary signs
		parameter	name	`ase-US-dictionary-public`	required,string	The name of an dictionary
		parameter	update	1	optional,number	Forces a rewrite of the alphabet
		method	GET	generate alphabet from dictionary contents
			code	$headers = getHeaders();
			code	$pass = isset($headers['Pass'])?$headers['Pass']:'';
			code	rightsCheck($name,$pass,SP_VIEW);
			code	$check = isset($headers['If-Modified-Since'])?$headers['If-Modified-Since']:'';
			code	if ($name=="iswa-2010"){
			code	  echo json_pretty(dictionaryISWA());
			code	  return;
			code	}
			code	$err = invalidName($name);
			code	if ($err){
			code	  haltBadRequest($err);
			code	}
			code	$lastModified = lastModified($name);
			code	if ($lastModified <= $check  && !$update){
			code	  haltNotModified();
			code	}
			code	
			code	$alphabet = str_replace('-dictionary-','-alphabet-',$name);
			code	$file = 'data/json/' . $alphabet . '.json';
			code	if (!$update){
			code	  if (!file_exists($file)) {
			code	    $update = 1;
			code	  } else {
			code	    $check = date ("Y-m-d\TH:i:s", filemtime($file));
			code	    $check =  new DateTime($check);
			code	    $check->setTimezone(new DateTimeZone('UTC'));
			code	    $check = $check->format('Y-m-d\TH:i:s\Z');
			code	    if ($lastModified>$check){
			code	      $update = 1;
			code	    }
			code	  }
			code	}
			code	if ($update) {
			code	  $json = json_pretty(dictionaryAlphabet($name,$lastModified));
			code	  file_put_contents($file,$json);
			code	}
			code	if(file_exists($file)) {
			code	  header('Last-Modified: ' . $lastModified);
			code	  $searchTime = searchtime($timein);
			code	  header("Search-Time: " . $searchTime);
			code	  getFile($file);
			code	} else {
			code	  haltNotFound();
			code	}
			request	dictionary query results
				header	If-Modified-Since	2019-01-16T16:56:19.175Z
				header	Pass	724fd4b4438fba9d0c5ab89d0833e5c9
				response	200	text/plain
					body	{"name": "ase-US-alphabet-public","data": []}
