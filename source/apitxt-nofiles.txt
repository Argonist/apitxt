group	nofiles
	route	/	Route listing
		method	GET	Get the route listing
			response	200	text/plain
				line	Routes available
				line	
				line	/root
				line	/group
				line	/route
				line	/parameter
				line	/method
				line	/request
				line	/response
				line	/header
				line	/line
				line	/code
				line	
				line	# ApiTxt
				line	> v1.0.0
				line	
				line	+ [txt](index.txt) - ApiTxt format
				line	+ [json](index.json) - array of JSON objects
				line	+ [md](index.md) - API Blueprint
				line	+ [html](index.html) - HTML documentation
				line	
				line	
				line	ApiTxt defines a highly structured plain text format used to define multiple facets of a website api.
				line	Each line in an ApiTxt document is a self-contained element which starts with a name and is followed by &lt;TAB> separated fields.
				line	Writing ApiTxt documents is easier when tabs and spaces appear different, so use a plain text editor and turn on the invisible characters option.
				line	
				line	## Input and Output Formats
				line	The various formats are used to define the structure and function of a website API.
				line	The original source is written in ApiTxt format and transformed into an array of JSON objects.
				line	The JSON objects are used to write other formats, including API Blueprint.
				line	
				line	### ApiTxt Format (txt)
				line	ApiTxt format uses plain text divided into multiple lines, where each line contains &lt;TAB> delimited fields.
				line	Writing ApiTxt documents is easier when tabs and spaces appear different, so use a plain text editor and turn on the invisible characters option.
				line	
				line	### Array of JSON Objects (json)
				line	Each line of ApiTxt format is converted into a JSON object or added to an existing object.  The various objects are stored in an ordered array.
				line	
				line	### API Blueprint (md)
				line	[API Blueprint](https://apiblueprint.org/) is a high-level API description language for web APIs. API Blueprint is widely supported with various tooling available.
				line	
				line	#### HTML Documentaion (html)
				line	The HTML documentation is generated from the API Blueprint document using the project [bukalapak/snowboard](https://github.com/bukalapak/snowboard/), written in golang.
				line	
				line	#### PHP Server (php)
				line	The PHP server is written for the PHP project [Slim Framework v2](https://docs.slimframework.com/) to create the functional web API.
				line	The website directory contains an .htaccess file for an Apache server with PHP support.
				line	Alternatively, the server can be started with a shell script (start_server.sh) using PHP's built in web server and a custom rewrite.php file.
				line	
				line	## Transformations
				line	Python programs and shell scripts are used to read and write a variety of data formats including plain text, JSON data, API Blueprint, HTML and PHP scripts.
				line	
				line	### Plain Text to JSON Objects (txt2json)
				line	The primary transformation is from the plain text format to an array of JSON objects.
				line	
				line	### JSON Objects back to Plain Text (json2txt)
				line	The transformation can be reversed, resulting in a document that is properly structured with standardized indenting.
				line	
				line	### JSON Objects to API Blueprint (json2md)
				line	The API Blueprint document is created from an array of JSON objects.
				line	Each object is written as a section of the API Blueprint document using a markdown syntax.
				line	
				line	### JSON Objects to PHP Server (json2php)
				line	A functional PHP server is built from the JSON objects for the Slim Framework v2.
				line	The server responses can be based on prewritten responses or functional PHP code using URL parameters and query parameters.
				line	
				line	### Plain Text to Tested Mock Servers (txt2mock)
				line	This script calls the previous scripts to create, check, and build the various website API documents.
				line	Multiple calls to [bukalapak/snowboard](https://github.com/bukalapak/snowboard/) are used to check the validity of the API Blueprint, to create the HTML documentation, and to create a mock server.

