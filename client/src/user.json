[
  {
    "lines": [
      "> v3.0.0"
    ], 
    "host": "https://signpuddle.com/server", 
    "meta": "Generated from ApiTxt format (output/user.txt) using txt2json.py", 
    "root": "user", 
    "title": "SignPuddle 3 User API"
  }, 
  {
    "lines": [
      "+ Source: [ApiTxt format](../src/user.txt) and [JSON objects](../src/user.json)", 
      "+ Documents: [API Blueprint](../doc/user.md) and [Stand Alone HTML](../doc/user.htm)", 
      "+ Live Page: [API Interface](../api/user.html) and [JavaScript](../api/user.js)", 
      "", 
      "### Country code", 
      "The country codes are from ISO-3166.", 
      "Each country is coded with two uppercase letters.", 
      "", 
      "### Language code", 
      "The language codes are from ISO-639-1 for spoken languages and ISO-639-3 for sign languages.", 
      "Each spoken language is coded with two lowercase letters.", 
      "Each sign language is coded with three lowercase letters."
    ], 
    "group": "user", 
    "description": "SignPuddle 3 collections are organized by country and language codes"
  }, 
  {
    "route": "/user/who/", 
    "name": "Who uses SignWriting?", 
    "description": "List of countries with size and activity."
  }, 
  {
    "description": "The available countries where signs are available.", 
    "method": "GET", 
    "dialog": [
      {
        "request": {
          "name": "user-who"
        }, 
        "responses": [
          {
            "status": 200, 
            "body": [
              "BR", 
              "US"
            ], 
            "type": "text/plain"
          }
        ]
      }
    ], 
    "name": "Retrieve country list"
  }, 
  {
    "route": "/user/pass", 
    "name": "User pass", 
    "description": "A string for accounting and validation"
  }, 
  {
    "code": [
      "  echo userPass();"
    ], 
    "method": "POST", 
    "dialog": [
      {
        "request": {
          "name": "user pass"
        }, 
        "responses": [
          {
            "status": 200, 
            "body": [
              "e3bedc9e9f83cb9dd7ae61250b9e6921"
            ], 
            "type": "text/plain"
          }
        ]
      }
    ], 
    "name": "String for accounting and validation"
  }, 
  {
    "route": "/user/login", 
    "name": "User login", 
    "description": "Validation of user with validated password"
  }, 
  {
    "code": [
      "  $data = $app->request->getbody();", 
      "  $data = json_decode($data,true);", 
      "  try {", 
      "    $results = userVerify($data['username'],$data['pass'],$data['validated']);", 
      "    $return = array();", 
      "    $return['meta']=array();", 
      "    $return['results']=$results;", 
      "    $return['meta']['method']='POST';", 
      "    $return['meta']['location']='/user/login';", 
      "    $return['meta']['searchTime'] = searchtime($timein);", 
      "    echo json_pretty($return);", 
      "  } catch (Exception $e) {", 
      "    //echo json_pretty($e);", 
      "    haltValidation($e->getCode() . ' ' . $e->getMessage());", 
      "  }"
    ], 
    "method": "PUT", 
    "dialog": [
      {
        "request": {
          "body": [
            "{\"username\":\"anonymous\",\"pass\":\"af77...\",\"validated\":\"2793f...\"}"
          ], 
          "lines": [
            "+ Even a list", 
            "+ name `Name` of the metaproperty, should be alphanumeric only. Uneditable."
          ], 
          "type": "application/json", 
          "name": "verify user"
        }, 
        "responses": [
          {
            "status": 200, 
            "lines": [
              "response text here"
            ], 
            "body": [
              "{\"user-profile\":\"\"}"
            ], 
            "type": "application/json"
          }
        ]
      }
    ], 
    "name": "Process log in to server"
  }
]
